{"version":3,"sources":["api-test.js"],"names":["expect","require","superTest","mainApp","server","request","describe","record","beforeEach","id","upvote","downvote","meal","ingredients","description","it","done","get","end","err","res","to","be","an","post","send","delete","put"],"mappings":";;AAAA;AACA,IAAMA,SAASC,QAAQ,MAAR,EAAgBD,MAA/B;AACA,IAAME,YAAYD,QAAQ,WAAR,CAAlB;AACA,IAAME,UAAUF,QAAQ,sBAAR,CAAhB;AACA,IAAMG,SAASH,QAAQ,WAAR,CAAf;;AAEA;AACA,IAAMI,UAAUH,UAAUE,MAAV,CAAhB;;AAGA;AACAE,SAAS,qBAAT,EAAgC,YAAU;AAC1C;AACI,QAAIC,SAAS,EAAb;AACJ;AACIC,eAAY,YAAM;AACdD,iBAAc;AACEE,gBAAI,CADN;AAEEC,oBAAQ,EAFV;AAGEC,sBAAU,CAHZ;AAIEC,kBAAM,MAJR;AAKEC,yBAAa,CAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,EAAgC,MAAhC,EAAwC,OAAxC,CALf;AAMEC,yBAAa;AANf,SAAd;AAQH,KATD;AAUJ;AACOC,OAAG,uBAAH,EAA4B,UAACC,IAAD,EAAU;AAClCX,gBAAQY,GAAR,CAAY,gBAAZ,EACCC,GADD,CACK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfpB,mBAAOoB,GAAP,EAAYC,EAAZ,CAAeC,EAAf,CAAkBC,EAAlB,CAAqB,QAArB;AACAP;AACH,SAJD;AAKH,KAND;AAOH;AACID,OAAG,sBAAH,EAA2B,UAACC,IAAD,EAAU;AAClCX,gBAAQmB,IAAR,CAAa,gBAAb,EACCC,IADD,CACMlB,MADN,EAECW,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfpB,mBAAOoB,GAAP,EAAYC,EAAZ,CAAeC,EAAf,CAAkBC,EAAlB,CAAqB,QAArB;AACAP;AACH,SALD;AAMH,KAPA;AAQJ;AACID,OAAG,sBAAH,EAA2B,UAACC,IAAD,EAAU;AAClCX,gBAAQqB,MAAR,CAAe,0BAAf,EACCD,IADD,CACMlB,MADN,EAECW,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfpB,mBAAOoB,GAAP,EAAYC,EAAZ,CAAeC,EAAf,CAAkBC,EAAlB,CAAqB,QAArB;AACAP;AACH,SALD;AAMH,KAPA;AAQJ;AACED,OAAG,sBAAH,EAA2B,UAACC,IAAD,EAAU;AAChCX,gBAAQsB,GAAR,CAAY,0BAAZ,EACCF,IADD,CACMlB,MADN,EAECW,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfpB,mBAAOoB,GAAP,EAAYC,EAAZ,CAAeC,EAAf,CAAkBC,EAAlB,CAAqB,QAArB;AACAP;AACH,SALD;AAMH,KAPF;AAUL,CAnDD","file":"api-test.js","sourceRoot":"C:/Users/lion/Documents/GitHub/recipes/server/tests","sourcesContent":["//necessary imports for test to work\r\nconst expect = require('chai').expect;\r\nconst superTest = require('supertest');\r\nconst mainApp = require('../controller/recipe');\r\nconst server = require('../../app');\r\n\r\n//get api and run it through supertest\r\nconst request = superTest(server);\r\n\r\n\r\n//cover for all test cases\r\ndescribe(\"Test for Api routes\", function(){\r\n//    object to hold raw data that'll work with test\r\n    let record = {};\r\n//    beforeEach() runs its program before each test cases\r\n    beforeEach( () => {\r\n        record  =     {\r\n                        id: 1,\r\n                        upvote: 20,\r\n                        downvote: 5,\r\n                        meal: \"stew\",\r\n                        ingredients: [\"Tomatoes\", \"Maggi\", \"Pepper\", \"salt\", \"corry\"],\r\n                        description: \"Sauce for other meals\",\r\n                    }\r\n    });\r\n//    test case to retrieve all recipe \r\n       it(\"should return done ' \", (done) => {\r\n           request.get('/api/v1/recipe')\r\n           .end((err, res) => {\r\n               expect(res).to.be.an('object');\r\n               done();\r\n           });\r\n       });\r\n    //    test case for create endpoint\r\n        it(\"should return done' \", (done) => {\r\n           request.post('/api/v1/recipe')\r\n           .send(record)\r\n           .end((err, res) => {\r\n               expect(res).to.be.an('object');\r\n               done();\r\n           });\r\n       });\r\n    //    test case for delete endpoint\r\n        it(\"should return done' \", (done) => {\r\n           request.delete('/api/v1/recipe/:recipeid')\r\n           .send(record)\r\n           .end((err, res) => {\r\n               expect(res).to.be.an('object');\r\n               done();\r\n           });\r\n       });\r\n    //    test case for update endpoint\r\n      it(\"should return done' \", (done) => {\r\n           request.put('/api/v1/recipe/:recipeid')\r\n           .send(record)\r\n           .end((err, res) => {\r\n               expect(res).to.be.an('object');\r\n               done();\r\n           });\r\n       });\r\n    \r\n\r\n})\r\n    \r\n"]}